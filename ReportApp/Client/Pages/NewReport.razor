@page "/newreport"
@using ReportApp.Core.DTO

@inject HttpClient Http

<h3>New report</h3>
<br />

<EditForm Model="@_reportDto">
    <div>
        <p>
            <MatTextField @bind-Value="@_reportDto.Body" Required="true" Label="Description" Outlined="true" TextArea="true" Style="width: 500px; height: 250px"></MatTextField>
        </p>
        <p>
            Employee ID: <br />
            <MatSelectItem @bind-Value="@_selectedEmployeeDto" Items="@_employees" Outlined="true">
                <ItemTemplate Context="e">
                    <span>[@e?.Id] @e.Name</span>
                </ItemTemplate>
            </MatSelectItem>
        </p>
    </div>
    <div>
        <MatButton Type="submit" OnClick="@SubmitNewReport" Unelevated="true" Style="background-color: limegreen">Submit</MatButton>
        &nbsp;
        <MatButton Unelevated="true" OnClick="@ResetReport" Style="background-color: dimgray">Reset</MatButton>
    </div>
    <br />
</EditForm>

@code {
    private EmployeeDto _selectedEmployeeDto;
    private ReportDto _reportDto = new ReportDto();
    private List<EmployeeDto> _employees = new List<EmployeeDto>();

    protected override async Task OnInitializedAsync()
    {
        _employees = await Http.GetFromJsonAsync<List<EmployeeDto>>("api/employee/get-all");
    }

    private async Task SubmitNewReport()
    {
        _reportDto.EmployeeId = _selectedEmployeeDto.Id;
        await Http.PostAsJsonAsync<ReportDto>("api/report/add", _reportDto);
    }

    private void ResetReport() => _reportDto = new ReportDto();
}
