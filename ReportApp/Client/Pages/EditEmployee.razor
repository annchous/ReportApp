@page "/editemployee/{EmployeeId:int}"

@using ReportApp.Core.DTO

@inject HttpClient Http

<h3>Edit employee</h3>
<br />

<EditForm Model="@_employeeDto">
    <div>
        <p>
            <MatTextField @bind-Value="@_employeeDto.Name" Required="true" Label="Name" Outlined="true"></MatTextField>
        </p>
        <p>
            Leader ID: <br />
            <MatSelectItem @bind-Value="@_selectedEmployeeDto" Items="@_employees" Disabled="@Disabled" Outlined="true">
                <ItemTemplate Context="e">
                    <span>[@e?.Id] @e.Name</span>
                </ItemTemplate>
            </MatSelectItem>
            &nbsp;
            <input type="checkbox" @bind="@_noLeader">
            &nbsp;
            No leader
        </p>
    </div>
    <div>
        <MatButton Type="submit" OnClick="@SubmitNewEmployee" Unelevated="true" Style="background-color: limegreen">Submit</MatButton>
        &nbsp;
        <MatButton Unelevated="true" OnClick="@ResetEmployee" Style="background-color: dimgray">Reset</MatButton>
    </div>
    <br />
</EditForm>

@code {
    [Parameter]
    public Int32 EmployeeId { get; set; }
    private EmployeeDto _selectedEmployeeDto;
    private EmployeeDto _employeeDto = new EmployeeDto();
    private List<EmployeeDto> _employees = new List<EmployeeDto>();

    private Boolean _noLeader;
    public Boolean Disabled => _noLeader;

    protected override async Task OnInitializedAsync()
    {
        _employeeDto = await Http.GetFromJsonAsync<EmployeeDto>($"api/employee/get-id/{EmployeeId}");
        _employees = await Http.GetFromJsonAsync<List<EmployeeDto>>("api/employee/get-all");
    }

    private async Task SubmitNewEmployee()
    {
        await Http.PostAsJsonAsync<EmployeeDto>("api/employee/add", _employeeDto);
    }

    private void ResetEmployee() => _employeeDto = new EmployeeDto();
}