@page "/newtask"

@using ReportApp.Core.DTO

@inject HttpClient Http

<h3>New task</h3>
<br/>

<EditForm Model="@_taskDto">
    <div>
        <p>
            <MatTextField @bind-Value="@_taskDto.Name" Required="true" Label="Title" Outlined="true"></MatTextField>
        </p>
        <p>
            <MatTextField @bind-Value="@_taskDto.Description" Required="true" Label="Description" Outlined="true" TextArea="true" Style="width: 500px; height: 250px"></MatTextField>
        </p>
        <p>
            <p>
                <b>Start date:</b>
            </p>
            <MatDatePicker @bind-Value="@_taskDto.StartDate" EnableTime="true" Enable24hours="true" Outlined="true"></MatDatePicker>
            </p>
        <p>
            <p>
                <b>Finish date:</b>
            </p>
            <MatDatePicker @bind-Value="@_taskDto.FinishDate" EnableTime="true" Enable24hours="true" Outlined="true"></MatDatePicker>
        </p>
        <p>
            Employee ID: <br />
            <MatSelectItem @bind-Value="@_selectedEmployeeDto" Items="@_employees" Outlined="true">
                <ItemTemplate Context="e">
                    <span>@e?.Id</span>
                </ItemTemplate>
            </MatSelectItem>
        </p>
    </div>
    <div>
        <MatButton Type="submit" OnClick="@SubmitNewTask" Unelevated="true" Style="background-color: limegreen">Submit</MatButton>
        &nbsp;
        <MatButton Unelevated="true" OnClick="@ResetTask" Style="background-color: dimgray">Reset</MatButton>
    </div>
    <br />
</EditForm>

@code {
    private TaskDto _taskDto = new TaskDto();
    private EmployeeDto _selectedEmployeeDto;
    private List<EmployeeDto> _employees = new List<EmployeeDto>();

    protected override async Task OnInitializedAsync()
    {
        _employees = await Http.GetFromJsonAsync<List<EmployeeDto>>("api/employee/get-all");
    }

    private async Task SubmitNewTask()
    {
        _taskDto.EmployeeId = _selectedEmployeeDto.Id;
        await Http.PostAsJsonAsync<TaskDto>("api/task/add", _taskDto);
    }

    private void ResetTask() => _taskDto = new TaskDto();
}
